{"ast":null,"code":"var _jsxFileName = \"/Users/deionstfleur/Desktop/Python Job Scraper/Python-Job-Scraper/frontend/src/Pages/SoldPricesChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoldPricesChart = () => {\n  _s();\n  const [soldPricesData, setSoldPricesData] = useState([]);\n  const chartRef = React.useRef(null); // Reference to the Chart instance\n\n  useEffect(() => {\n    const fetchSoldPrices = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/properties');\n        setSoldPricesData(response.data);\n      } catch (error) {\n        console.error('Failed to fetch sold prices:', error);\n      }\n    };\n    fetchSoldPrices();\n  }, []);\n  useEffect(() => {\n    if (soldPricesData.length > 0) {\n      renderChart();\n    }\n  }, [soldPricesData]);\n  const renderChart = () => {\n    const soldPrices = soldPricesData.filter(property => property.sold_price !== null).map(property => property.sold_price);\n    const propertyIndices = soldPricesData.map((property, index) => index + 1).filter((index, idx) => soldPricesData[idx].sold_price !== null);\n    const ctx = document.getElementById('soldPricesChart2').getContext('2d');\n\n    // Check if a Chart instance already exists\n    if (chartRef.current) {\n      chartRef.current.destroy(); // Destroy the existing Chart instance\n    }\n\n    // Create new Chart instance and store it in the reference\n    chartRef.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: propertyIndices,\n        datasets: [{\n          label: 'Sold Prices of Boston Properties in 2024',\n          data: soldPrices,\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1,\n          fill: false\n        }]\n      },\n      options: {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"soldPricesChart2\",\n      width: \"800\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(SoldPricesChart, \"nrcB7IixzXC5GU3u2WK3Ts1A2Ng=\");\n_c = SoldPricesChart;\nexport default SoldPricesChart;\nvar _c;\n$RefreshReg$(_c, \"SoldPricesChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","jsxDEV","_jsxDEV","SoldPricesChart","_s","soldPricesData","setSoldPricesData","chartRef","useRef","fetchSoldPrices","response","get","data","error","console","length","renderChart","soldPrices","filter","property","sold_price","map","propertyIndices","index","idx","ctx","document","getElementById","getContext","current","destroy","type","labels","datasets","label","borderColor","borderWidth","fill","options","scales","yAxes","ticks","beginAtZero","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/deionstfleur/Desktop/Python Job Scraper/Python-Job-Scraper/frontend/src/Pages/SoldPricesChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\n\nconst SoldPricesChart = () => {\n    const [soldPricesData, setSoldPricesData] = useState([]);\n    const chartRef = React.useRef(null); // Reference to the Chart instance\n\n    useEffect(() => {\n        const fetchSoldPrices = async () => {\n            try {\n                const response = await axios.get('http://127.0.0.1:5000/api/properties');\n                setSoldPricesData(response.data);\n            } catch (error) {\n                console.error('Failed to fetch sold prices:', error);\n            }\n        };\n\n        fetchSoldPrices();\n    }, []);\n\n    useEffect(() => {\n        if (soldPricesData.length > 0) {\n            renderChart();\n        }\n    }, [soldPricesData]);\n\n    const renderChart = () => {\n        const soldPrices = soldPricesData\n            .filter(property => property.sold_price !== null)\n            .map(property => property.sold_price);\n        const propertyIndices = soldPricesData\n            .map((property, index) => index + 1)\n            .filter((index, idx) => soldPricesData[idx].sold_price !== null);\n\n        const ctx = document.getElementById('soldPricesChart2').getContext('2d');\n\n        // Check if a Chart instance already exists\n        if (chartRef.current) {\n            chartRef.current.destroy(); // Destroy the existing Chart instance\n        }\n\n        // Create new Chart instance and store it in the reference\n        chartRef.current = new Chart(ctx, {\n            type: 'line',\n            data: {\n                labels: propertyIndices,\n                datasets: [{\n                    label: 'Sold Prices of Boston Properties in 2024',\n                    data: soldPrices,\n                    borderColor: 'rgba(75, 192, 192, 1)',\n                    borderWidth: 1,\n                    fill: false\n                }]\n            },\n            options: {\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                }\n            }\n        });\n    };\n\n    return (\n        <div>\n            <canvas id=\"soldPricesChart2\" width=\"800\" height=\"400\"></canvas>\n        </div>\n    );\n};\n\nexport default SoldPricesChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMU,QAAQ,GAAGX,KAAK,CAACY,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAErCV,SAAS,CAAC,MAAM;IACZ,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,sCAAsC,CAAC;QACxEL,iBAAiB,CAACI,QAAQ,CAACE,IAAI,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IAEDJ,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACZ,IAAIO,cAAc,CAACU,MAAM,GAAG,CAAC,EAAE;MAC3BC,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC,EAAE,CAACX,cAAc,CAAC,CAAC;EAEpB,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,UAAU,GAAGZ,cAAc,CAC5Ba,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,UAAU,KAAK,IAAI,CAAC,CAChDC,GAAG,CAACF,QAAQ,IAAIA,QAAQ,CAACC,UAAU,CAAC;IACzC,MAAME,eAAe,GAAGjB,cAAc,CACjCgB,GAAG,CAAC,CAACF,QAAQ,EAAEI,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC,CACnCL,MAAM,CAAC,CAACK,KAAK,EAAEC,GAAG,KAAKnB,cAAc,CAACmB,GAAG,CAAC,CAACJ,UAAU,KAAK,IAAI,CAAC;IAEpE,MAAMK,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;;IAExE;IACA,IAAIrB,QAAQ,CAACsB,OAAO,EAAE;MAClBtB,QAAQ,CAACsB,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAChC;;IAEA;IACAvB,QAAQ,CAACsB,OAAO,GAAG,IAAI7B,KAAK,CAACyB,GAAG,EAAE;MAC9BM,IAAI,EAAE,MAAM;MACZnB,IAAI,EAAE;QACFoB,MAAM,EAAEV,eAAe;QACvBW,QAAQ,EAAE,CAAC;UACPC,KAAK,EAAE,0CAA0C;UACjDtB,IAAI,EAAEK,UAAU;UAChBkB,WAAW,EAAE,uBAAuB;UACpCC,WAAW,EAAE,CAAC;UACdC,IAAI,EAAE;QACV,CAAC;MACL,CAAC;MACDC,OAAO,EAAE;QACLC,MAAM,EAAE;UACJC,KAAK,EAAE,CAAC;YACJC,KAAK,EAAE;cACHC,WAAW,EAAE;YACjB;UACJ,CAAC;QACL;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACIxC,OAAA;IAAAyC,QAAA,eACIzC,OAAA;MAAQ0C,EAAE,EAAC,kBAAkB;MAACC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEd,CAAC;AAAC9C,EAAA,CApEID,eAAe;AAAAgD,EAAA,GAAfhD,eAAe;AAsErB,eAAeA,eAAe;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}